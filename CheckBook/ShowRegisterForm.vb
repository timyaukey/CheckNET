Option Strict On
Option Explicit On


Friend Class ShowRegisterForm
    Inherits System.Windows.Forms.Form

    Private Structure ShowRegElement
        Dim objAccount As Account
        Dim objReg As Register

        Public ReadOnly Property objSelectedReg() As Register
            Get
                If Not objReg Is Nothing Then
                    Return objReg
                End If
                If objAccount.Registers.Count = 1 Then
                    Return objAccount.Registers(0)
                End If
                Return Nothing
            End Get
        End Property
    End Structure

    Private mobjHostUI As IHostUI
    Private mobjCompany As Company
    Private maudtElement() As ShowRegElement
    Private mintElements As Integer

    Public Sub ShowWindow(ByVal objHostUI As IHostUI)
        mobjHostUI = objHostUI
        mobjCompany = mobjHostUI.objCompany
        Me.Show()
    End Sub

    Private Sub cmdCancel_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdCancel.Click
        Me.Close()
    End Sub

    Private Sub cmdDeleteRegister_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdDeleteRegister.Click
        Dim objReg As Register

        Try

            If Not mobjCompany.SecData.blnIsAdministrator Then
                mobjHostUI.InfoMessageBox("Your login is not authorized to delete registers.")
                Exit Sub
            End If

            If gcolForms().Count() <> 1 Then
                mobjHostUI.ErrorMessageBox("You may not delete a register while other windows are open.")
                Exit Sub
            End If

            With maudtElement(lstRegisters.SelectedIndex)
                If .objSelectedReg Is Nothing Then
                    mobjHostUI.InfoMessageBox("You must select a register, not an account.")
                    Exit Sub
                End If
                If .objAccount.HasUnsavedChanges Then
                    mobjHostUI.ErrorMessageBox("You may not delete a register from an account " & "with unsaved changes.")
                    Exit Sub
                End If
                If .objAccount.Registers.Count() <= 1 Then
                    mobjHostUI.ErrorMessageBox("You may not delete the last register from an account.")
                    Exit Sub
                End If
                objReg = .objSelectedReg
                If mobjHostUI.OkCancelMessageBox("Do you really want to delete register """ & objReg.Title & """?") <> DialogResult.OK Then
                    Exit Sub
                End If
                If mobjHostUI.OkCancelMessageBox("Are you really sure you want to delete it?") <> DialogResult.OK Then
                    Exit Sub
                End If
                mobjHostUI.InfoMessageBox("Will delete all transfers to/from other registers.")
                'Now look for non-generated transfers and delete them,
                'so the other half of the transfer is deleted from whatever
                'register it belongs to. Don't worry about generated transfers,
                'because they won't be recreated once this register is deleted.
                'Have to loop twice here because deleting trx affects register iteration.
                Dim colToDelete As List(Of TransferTrx) = New List(Of TransferTrx)()
                For Each objTransferTrx As TransferTrx In objReg.GetAllTrx(Of TransferTrx)
                    If Not objTransferTrx.IsAutoGenerated Then
                        colToDelete.Add(objTransferTrx)
                    End If
                Next
                For Each objTransferTrx As TransferTrx In colToDelete
                    Dim objXfer As TransferManager = New TransferManager
                    Dim objOtherReg As Register = .objAccount.FindRegister(objTransferTrx.TransferKey)
                    objXfer.DeleteTransfer(objReg, objTransferTrx, objOtherReg)
                Next
                objReg.IsDeleted = True
                .objAccount.SetChanged()
            End With
            mobjHostUI.InfoMessageBox("Register deleted. Will quit program now, to save this change to the account.")
            CBMainForm.Close()

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub cmdNewAccount_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdNewAccount.Click
        Try

            If Not mobjCompany.SecData.blnIsAdministrator Then
                mobjHostUI.InfoMessageBox("Your login is not authorized to create accounts.")
                Exit Sub
            End If

            If gblnAskAndCreateAccount(mobjHostUI) Then
                mobjHostUI.InfoMessageBox("Account will appear the next time you start the software.")
            End If

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub cmdDeleteAccount_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdDeleteAccount.Click
        Dim strNameRoot As String

        Try

            If Not mobjCompany.SecData.blnIsAdministrator Then
                mobjHostUI.InfoMessageBox("Your login is not authorized to delete accounts.")
                Exit Sub
            End If

            If gcolForms().Count() <> 1 Then
                mobjHostUI.ErrorMessageBox("You may not delete an account while other windows are open.")
                Exit Sub
            End If

            With maudtElement(lstRegisters.SelectedIndex)
                strNameRoot = Replace(LCase(.objAccount.FileNameRoot), ".act", "")
                If mobjHostUI.OkCancelMessageBox("Are you sure you want to delete account """ & .objAccount.Title & """?") <> DialogResult.OK Then
                    Exit Sub
                End If
                If mobjHostUI.OkCancelMessageBox("Are you REALLY, REALLY, SURE you want to delete account """ & .objAccount.Title & """?") <> DialogResult.OK Then
                    Exit Sub
                End If
            End With
            DeleteAccount(strNameRoot)
            mobjHostUI.InfoMessageBox("Account deleted. Will quit program now, to save this change.")
            CBMainForm.Close()

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub DeleteAccount(ByVal strNameRoot As String)
        Dim strFile As String

        Try

            Do
                strFile = Dir(mobjCompany.BackupsFolderPath() & "\" & strNameRoot & ".act.*")
                If strFile = "" Then
                    Exit Do
                End If
                Kill(mobjCompany.BackupsFolderPath() & "\" & strFile)
            Loop

            strFile = mobjCompany.AccountsFolderPath() & "\" & strNameRoot & ".rep"
            If Dir(strFile) <> "" Then
                Kill(strFile)
            End If

            'It looks for ACT files to find accounts, so delete this one last
            'in case it crashes deleting other files. So you can try again.
            strFile = mobjCompany.AccountsFolderPath() & "\" & strNameRoot & ".act"
            If Dir(strFile) <> "" Then
                Kill(strFile)
            End If

            Exit Sub
        Catch ex As Exception
            NestedException(ex)
        End Try
    End Sub

    Private Sub cmdNewRegister_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdNewRegister.Click
        Dim strName As String
        Dim intHighestKey As Integer
        Dim objReg As Register

        Try

            If Not mobjCompany.SecData.blnIsAdministrator Then
                mobjHostUI.InfoMessageBox("Your login is not authorized to create a new register.")
                Exit Sub
            End If

            strName = InputBox("Name of new register:", "New Register")
            If strName = "" Then
                Exit Sub
            End If

            With maudtElement(lstRegisters.SelectedIndex)
                If mobjHostUI.OkCancelMessageBox("Do you really want to create a new register named """ & strName & """ in account """ & .objAccount.Title & """?") <> DialogResult.OK Then
                    Exit Sub
                End If
                For Each objReg In .objAccount.Registers
                    If CInt(Val(objReg.RegisterKey)) > intHighestKey Then
                        intHighestKey = CInt(Val(objReg.RegisterKey))
                    End If
                Next objReg
                .objAccount.CreateRegister(CStr(intHighestKey + 1), strName, True)
                .objAccount.SetChanged()
                mobjHostUI.InfoMessageBox("New register has been added to account and will appear the " & "next time you start the software.")
            End With

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub cmdSetAccountProperties_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdSetAccountProperties.Click
        Try
            With maudtElement(lstRegisters.SelectedIndex)
                Using frm As AccountForm = New AccountForm
                    If frm.ShowDialog(mobjHostUI, .objAccount, True, Not mobjCompany.SecData.blnIsAdministrator) = DialogResult.OK Then
                        mobjHostUI.InfoMessageBox("Account property changes will take effect the next time you start the software.")
                    End If
                End Using
            End With

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub cmdShowRegister_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdShowRegister.Click
        Try

            If lstRegisters.SelectedIndex < 0 Then
                mobjHostUI.ErrorMessageBox("Please select a register first.")
                Exit Sub
            End If

            With maudtElement(lstRegisters.SelectedIndex)
                If .objSelectedReg Is Nothing Then
                    mobjHostUI.InfoMessageBox("You must select a register, not an account.")
                    Exit Sub
                End If
                mobjHostUI.ShowRegister(.objSelectedReg)
            End With
            'Me.Close()

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub cmdRegProperties_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdRegProperties.Click
        Dim objProps As RegPropertiesForm

        Try

            If lstRegisters.SelectedIndex < 0 Then
                mobjHostUI.ErrorMessageBox("Please select a register first.")
                Exit Sub
            End If

            With maudtElement(lstRegisters.SelectedIndex)
                If .objSelectedReg Is Nothing Then
                    mobjHostUI.InfoMessageBox("You must select a register, not an account.")
                    Exit Sub
                End If
                objProps = New RegPropertiesForm
                objProps.ShowModal(mobjHostUI, .objSelectedReg, Not mobjCompany.SecData.blnIsAdministrator)
            End With

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub cmdRegen_Click(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles cmdRegen.Click

        Try

            Dim strRegisterEndDate As String = InputBox("Enter ending date to generate transactions through:",
                "Ending Date", Utilities.strFormatDate(DateAdd(Microsoft.VisualBasic.DateInterval.Day, 90, Now)))
            If strRegisterEndDate <> "" Then
                If Utilities.blnIsValidDate(strRegisterEndDate) Then
                    Dim strCutoffDate As String = Utilities.strFormatDate(mobjCompany.LastReconciledDate().AddDays(1D))
                    strCutoffDate = InputBox("Enter cutoff date for transaction generators that do not " +
                        "generate transactions older than some number of days relative to a cutoff date:", "Cutoff Date", strCutoffDate)
                    If Utilities.blnIsValidDate(strCutoffDate) Then
                        CompanyLoader.RecreateGeneratedTrx(mobjCompany, CDate(strRegisterEndDate), CDate(strCutoffDate))
                    Else
                        mobjHostUI.InfoMessageBox("Invalid cutoff date.")
                    End If
                Else
                    mobjHostUI.InfoMessageBox("Invalid ending date.")
                End If
            End If

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub ShowRegisterForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load
        Dim objAccount As Account
        Dim objReg As Register

        Try

            Me.Width = 540
            Me.Height = 450

            Erase maudtElement
            mintElements = 0
            lstRegisters.Items.Clear()

            For Each objAccount In mobjCompany.Accounts
                mintElements = mintElements + 1
                ReDim Preserve maudtElement(mintElements - 1)
                With maudtElement(mintElements - 1)
                    .objAccount = objAccount
                    .objReg = Nothing
                    .objReg = Nothing
                    lstRegisters.Items.Add(objAccount.AccountTypeLetter + ":" + objAccount.Title)
                End With
                If objAccount.Registers.Count > 1 Then
                    For Each objReg In objAccount.Registers
                        mintElements = mintElements + 1
                        ReDim Preserve maudtElement(mintElements - 1)
                        With maudtElement(mintElements - 1)
                            .objAccount = objAccount
                            .objReg = objReg
                            lstRegisters.Items.Add("-- " & .objReg.Title)
                        End With
                    Next objReg
                End If
            Next objAccount

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub lstRegisters_SelectedIndexChanged(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles lstRegisters.SelectedIndexChanged
        Dim blnRegisterSelected As Boolean
        Dim blnOneRegister As Boolean

        Try

            blnRegisterSelected = Not (maudtElement(lstRegisters.SelectedIndex).objReg Is Nothing)
            blnOneRegister = (maudtElement(lstRegisters.SelectedIndex).objAccount.Registers.Count = 1)
            cmdSetAccountProperties.Enabled = Not blnRegisterSelected
            cmdDeleteAccount.Enabled = Not blnRegisterSelected
            cmdShowRegister.Enabled = blnRegisterSelected Or blnOneRegister
            cmdDeleteRegister.Enabled = blnRegisterSelected
            cmdEditGenerators.Enabled = blnRegisterSelected Or blnOneRegister
            cmdNewRegister.Enabled = Not blnRegisterSelected
            cmdRegProperties.Enabled = blnRegisterSelected Or blnOneRegister

            Exit Sub
        Catch ex As Exception
            TopException(ex)
        End Try
    End Sub

    Private Sub lstRegisters_DoubleClick(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles lstRegisters.DoubleClick
        cmdShowRegister_Click(cmdShowRegister, New System.EventArgs())
    End Sub

    Private Sub cmdEditGenerators_Click(sender As Object, e As EventArgs) Handles cmdEditGenerators.Click
        With maudtElement(lstRegisters.SelectedIndex)

            Using frm As New FileListEditorForm
                frm.ShowDialogForPath(mobjHostUI, "Transaction Generators", TrxGeneratorPath(.objAccount, .objSelectedReg),
                    "gen", New TrxGenFilePersister())
            End Using
        End With
    End Sub
End Class