Option Strict On
Option Explicit On

'This interface is used to generate lists of transactions by following
'some rule known to the object and parameters retrieved from an XML file.

Public Interface ITrxGenerator

    '$Description Read parameters from the XML document describing this instance.
    '$Param objDoc The XML document with parameter information.

    Function Load(ByVal domDoc As CBXmlDocument, ByVal objAccount As Account) As String

    '$Description Description of this generator.

    ReadOnly Property Description() As String

    '$Description True iff this object should be used to generate transactions.

    ReadOnly Property IsEnabled() As Boolean

    '$Description The repeat key associated with this generator.

    ReadOnly Property RepeatKey() As String

    ReadOnly Property MaxDaysOld() As Integer?

    '$Description Return a Collection of TrxToCreate from which to create
    '   BaseTrx to add to a register.
    '$Param datEndDate Create no transaction dated later than this. Other
    '   than this constraint, the date range and dates are controlled by
    '   the generator and not the caller.

    Function CreateTrx(ByVal objReg As Register, ByVal datRptEndMax As Date) As ICollection(Of TrxToCreate)
End Interface

'Data from which one Split can be created by gstrCreateOneTrx().
Public Structure SplitToCreate
    Dim Memo As String
    Dim CategoryKey As String
    Dim PONumber As String
    Dim InvoiceNum As String
    Dim InvoiceDate As Date
    Dim DueDate As Date
    Dim Terms As String
    Dim BudgetKey As String
    Dim Amount As Decimal
End Structure

'Data from which one BaseTrx can be created by gstrCreateOneTrx().
Public Structure TrxToCreate
    Dim Number As String
    Dim TrxDate As Date
    Dim Description As String
    Dim Memo As String
    Dim Status As BaseTrx.TrxStatus
    Dim TrxType As Type
    Dim IsFake As Boolean
    Dim IsAutoGenerated As Boolean
    Dim IsAwaitingReview As Boolean
    Dim NormalMatchRange As Decimal
    Dim ImportKey As String
    Dim RepeatSeq As Integer
    Dim RepeatKey As String
    Dim SplitCount As Integer
    Dim Splits() As SplitToCreate
    Dim Amount As Decimal
    Dim BudgetKey As String
    Dim BudgetStarts As Date
    Dim BudgetUnit As BaseTrx.RepeatUnit
    Dim BudgetNumber As Integer
    Dim TransferKey As String
End Structure

'Data from which to generate a sequence of dates.
Public Structure DateSequenceParams
    Dim RptUnit As BaseTrx.RepeatUnit
    Dim RptNumber As Short
    Dim NominalStartDate As Date
    Dim NominalEndDate As Object
End Structure
