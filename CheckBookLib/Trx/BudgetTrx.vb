Option Strict On
Option Explicit On

Public Class BudgetTrx
    Inherits Trx

    Public Overrides ReadOnly Property lngType As TrxType
        Get
            Return TrxType.glngTRXTYP_BUDGET
        End Get
    End Property

    Public Overrides Function objClone(objReg As Register) As Trx
        Dim objBudgetTrx As BudgetTrx = New BudgetTrx()
        objBudgetTrx.NewStartBudget(objReg, mdatDate, mstrDescription, mstrMemo, mblnAwaitingReview, mblnAutoGenerated, mintRepeatSeq, mstrRepeatKey, mcurBudgetLimit, mdatBudgetEnds, mstrBudgetKey)
        objBudgetTrx.SetAmount(mcurAmount)
        Return objBudgetTrx
    End Function

    Public Overrides Function objGetTrxManager(objReg As Register, lngIndex As Integer) As TrxManager
        Return New BudgetTrxManager(objReg, lngIndex, Me)
    End Function

    Public Overrides Sub Validate(objReg As Register, lngIndex As Integer)
        Dim objSplit As TrxSplit
        Dim curTotal As Decimal
        MyBase.Validate(objReg, lngIndex)
        If mstrBudgetKey = "" Then
            objReg.RaiseValidationError(lngIndex, "Budget trx requires budget key")
            Exit Sub
        End If
        If mcolAppliedSplits Is Nothing Then
            objReg.RaiseValidationError(lngIndex, "Missing applied split collection")
        Else
            curTotal = 0
            For Each objSplit In mcolAppliedSplits
                curTotal = curTotal + objSplit.curAmount
                If Not objSplit.objBudget Is Me Then
                    objReg.RaiseValidationError(lngIndex, "Split applied to budget trx has wrong objBudget")
                End If
                If objSplit.strBudgetKey <> mstrBudgetKey Then
                    objReg.RaiseValidationError(lngIndex, "Split applied to budget trx has wrong budget key")
                End If
            Next objSplit
            If curTotal <> mcurBudgetApplied Then
                objReg.RaiseValidationError(lngIndex, "Budget trx applied splits add up wrong")
            End If
        End If
        If mstrTransferKey <> "" Then
            objReg.RaiseValidationError(lngIndex, "Budget trx cannot have transfer key")
        End If
        If mcurTransferAmount <> 0 Then
            objReg.RaiseValidationError(lngIndex, "Budget trx cannot have transfer amount")
        End If
        If Not mblnFake Then
            objReg.RaiseValidationError(lngIndex, "Budget trx must be fake")
        End If
        If Not mcolSplits Is Nothing Then
            objReg.RaiseValidationError(lngIndex, "Budget trx cannot have split collection")
        End If
    End Sub
End Class
