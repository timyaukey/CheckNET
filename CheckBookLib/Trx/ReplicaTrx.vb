Option Strict On
Option Explicit On

Public Class ReplicaTrx
    Inherits Trx

    Private mstrCatKey As String

    Public Sub New(ByVal objReg_ As Register)
        MyBase.New(objReg_)
    End Sub

    Public Overrides ReadOnly Property lngType As TrxType
        Get
            Return Trx.TrxType.glngTRXTYP_REPLICA
        End Get
    End Property

    Public Overrides ReadOnly Property strCategory As String
        Get
            Return mobjReg.objAccount.objCompany.objCategories.strTranslateKey(mstrCatKey)
        End Get
    End Property

    Public Sub NewStartReplica(ByVal blnWillAddToRegister As Boolean, ByVal datDate_ As Date, ByVal strDescription_ As String,
                              ByVal strCatKey_ As String, ByVal curAmount_ As Decimal, ByVal blnFake_ As Boolean)

        If blnWillAddToRegister Then
            mobjReg.ClearFirstAffected()
        End If

        mstrNumber = "Repl"
        mdatDate = datDate_
        mstrDescription = strDescription_
        mstrCatKey = strCatKey_
        mstrMemo = ""
        mlngStatus = TrxStatus.glngTRXSTS_NONBANK
        mblnFake = blnFake_
        mblnAwaitingReview = False
        mblnAutoGenerated = False
        mcurAmount = curAmount_

        RaiseErrorOnBadData("NewStartReplica")

    End Sub

    Public Overrides Sub UnApply()
        'Do nothing for ReplicaTrx
    End Sub

    Public Overrides Sub Apply(ByVal blnLoading As Boolean)
        'Do nothing for ReplicaTrx
    End Sub

    Public Overrides Function objClone(ByVal blnWillAddToRegister As Boolean) As Trx
        Dim objReplicaTrx As ReplicaTrx = New ReplicaTrx(mobjReg)
        objReplicaTrx.NewStartReplica(blnWillAddToRegister, mdatDate, mstrDescription, mstrCatKey, mcurAmount, mblnFake)
        Return objReplicaTrx
    End Function

    Public Function objGetTrxManager() As ReplicaTrxManager
        Return New ReplicaTrxManager(Me)
    End Function
End Class
