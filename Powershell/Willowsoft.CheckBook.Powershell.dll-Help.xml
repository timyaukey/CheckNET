<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
  <!-- Adapted from example in C:\Program Files\WindowsPowerShell\Modules\AzureRM.UsageAggregates\4.0.2 -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Open-CheckbookCompany</command:name>
      <command:verb>Open</command:verb>
      <command:noun>CheckbookCompany</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Open a Willow Creek Checkbook company and return a Company object.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Open the Willow Creek Checkbook company in the specified folder, and return a Company object representing it. This Company object can be used with other commands to work with the company.
      </maml:para>
      <maml:para>
        This command should be immediately followed by a "try { }" block with the commands that work with the company inside it, and with a "Close-CheckbookCompany" command in a matching "finally { }" block. This will guarantee that the company is closed even if an error occurs while working with the company. Otherwise you risk leaving the company locked until the lock timeout expires.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Open-CheckbookCompany</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Path</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserName</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Password</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Path</maml:name>
        <maml:Description>
          <maml:para>
            The folder containing the company data files.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        <!--<dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>-->
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UserName</maml:name>
        <maml:Description>
          <maml:para>
            Specifies the user name to open the company with. Only used if the company requires a user name and password.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <!--<dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>-->
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Password</maml:name>
        <maml:Description>
          <maml:para>
            Specifies the password to open the company with. Only used if the company requires a user name and password.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <!--<dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>-->
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.Company</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>Example 1: Open a company that does not require a user name and password</maml:title>
        <dev:code>PS C:\&gt;$cmp = Open-CheckbookCompany -Path "c:\mycompanyfolder"</dev:code>
        <dev:remarks>
          <maml:para>
            This command returns a Company object that can be used to work with the company in "c:\mycompanyfolder".
          </maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Open a company that requires a user name and password</maml:title>
        <dev:code>PS C:\&gt;$cmp = Open-CheckbookCompany -Path "c:\mycompanyfolder" -UserName Admin -Password Secretpassword</dev:code>
        <dev:remarks>
          <maml:para>
            This command returns a Company object that can be used to work with the company in "c:\mycompanyfolder".
          </maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 3: Open a company with "try { } finally { }"</maml:title>
        <dev:code>
$cmp = Open-CheckbookCompany -path "c:\mycompanyfolder"
try
{
  $acct = Get-CheckbookAccount -Company $cmp -AccountName "Checking Account"
  $reg = Get-CheckbookRegister -Account $acct -RegisterName "Checking Account"
}
finally
{
  Close-CheckbookCompany -Company $cmp
}
        </dev:code>
        <dev:remarks>
          <maml:para>
            This script creates a Company object that can be used to work with the company in "c:\mycompanyfolder", in a way that guarantees it will be closed.
          </maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Save-CheckbookCompany</command:name>
      <command:verb>Save</command:verb>
      <command:noun>CheckbookCompany</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Save all changes made to a Willow Creek Checkbook company.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Save all changes made to accounts in a Willow Creek Checkbook company. The Company object is obtained by calling Open-CheckbookCompany. Only saves those accounts that have been updated. Does nothing if there are no accounts with unsaved changes.
      </maml:para>
      <maml:para>
        This command is generally the last command in a "try { }" block for the company, followed by a "Close-CheckbookCompany" command in a matching "finally { }" block. This will guarantee that the company is closed even if an error occurs while working with the company. Otherwise you risk leaving the company locked until the lock timeout expires.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Save-CheckbookCompany</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Company</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true"><!--This is what appears in the SYNTAX section-->Company</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Company</maml:name>
        <maml:Description>
          <maml:para>
            The Company object returned by the Open-CheckbookCompany cmdlet.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Company</command:parameterValue>
        <!--<dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.Company</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>-->
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not create any output.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Close-CheckbookCompany</command:name>
      <command:verb>Close</command:verb>
      <command:noun>CheckbookCompany</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Close the checkbook company opened by the Open-CheckbookCompany cmdlet.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Close the checkbook company opened by the Open-CheckbookCompany cmdlet. Does not save any changes to the company. The Company object is obtained by calling Open-CheckbookCompany.
      </maml:para>
      <maml:para>
        This command is generally used in the "finally { }" block of a "try { } finally { }", where the "try { }" immediately follows a call to the Open-CheckbookCompany cmdlet. This will guarantee that the company is closed even if an error occurs while working with the company. Otherwise you risk leaving the company locked until the lock timeout expires.
      </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Close-CheckbookCompany</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Company</maml:name>
          <maml:Description>
            <maml:para>
              The Company object returned by the Open-CheckbookCompany cmdlet.
            </maml:para>
          </maml:Description>
          <command:parameterValue required="true" variableLength="true">
            <!--This is what appears in the SYNTAX section-->Company
          </command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Company</maml:name>
        <maml:Description>
          <maml:para>
            The Company object returned by the Open-CheckbookCompany cmdlet.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Company</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not create any output.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CheckbookAccount</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CheckbookAccount</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Get an account object from an open company.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Gets the Account object for the named account in the specified company. The next step is typically to use Get-CheckbookRegister on this Account object to get one of the registers in this account.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Get-CheckbookAccount</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Company</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Company</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AccountName</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Company</maml:name>
        <maml:Description>
          <maml:para>
            The Company object returned by the Open-CheckbookCompany cmdlet.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Company</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AccountName</maml:name>
        <maml:Description>
          <maml:para>
            The name of the account to get. This is the account name as it appears inside the Willow Creek Checkbook software, not the name of the associated *.ACT file.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.Account</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The Account object with the specified account name.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CheckbookRegister</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CheckbookRegister</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Get a register belonging to an account.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Gets the Register object for the named register in the specified account. This Register object can be used with many other cmdlets to get lists of transactions from that register, or perform operations on transactions in that register.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Get-CheckbookRegister</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Account</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Account</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RegisterName</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Account</maml:name>
        <maml:Description>
          <maml:para>
            An Account object returned by the Get-CheckbookAccount cmdlet, or otherwise obtained from the Company object.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Account</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RegisterName</maml:name>
        <maml:Description>
          <maml:para>
            The name of the register to get. This is the register name as it appears inside the Willow Creek Checkbook software.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.Register</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The Register object with the specified register name.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CheckbookTrx</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CheckbookTrx</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Get transactions within a date range from a register.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Get all transactions of the desired type with transaction dates between the start and end dates inclusive. This may be all transactions between those dates, or only of a single type such as bank transactions or budget transactions.
      </maml:para>
      <maml:para>
        Which transactions will be returned is fixed before the first one is returned, and will not be affected by any operation while iterating through the results - such as deleting a transaction in the list during the iteration, or creating a new transaction of the desired type inside the date range.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Get-CheckbookTrx</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Register</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Register</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>StartDate</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>EndDate</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TransType</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">{All|Normal|Budget|Transfer}</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Register</maml:name>
        <maml:Description>
          <maml:para>
            A Register object returned by the Get-CheckbookRegister cmdlet, or otherwise obtained from the Company object.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Register</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>StartDate</maml:name>
        <maml:Description>
          <maml:para>
            The earliest transaction date to return.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">DateTime</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>EndDate</maml:name>
        <maml:Description>
          <maml:para>
            The latest transaction date to return.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">DateTime</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TransType</maml:name>
        <maml:Description>
          <maml:para>
            The type of transaction to return. The default is to return all types of transaction.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        <dev:defaultValue>All</dev:defaultValue>
        <dev:possibleValues>
          <dev:possibleValue>
            <dev:value>All</dev:value>
            <maml:description>
              <maml:para>Return all types of transactions.</maml:para>
            </maml:description>
          </dev:possibleValue>
          <dev:possibleValue>
            <dev:value>Normal</dev:value>
            <maml:description>
              <maml:para>Return only regular (bank) transactions.</maml:para>
            </maml:description>
          </dev:possibleValue>
          <dev:possibleValue>
            <dev:value>Budget</dev:value>
            <maml:description>
              <maml:para>Return only budget transactions.</maml:para>
            </maml:description>
          </dev:possibleValue>
          <dev:possibleValue>
            <dev:value>Transfer</dev:value>
            <maml:description>
              <maml:para>Return only transfer transactions.</maml:para>
            </maml:description>
          </dev:possibleValue>
        </dev:possibleValues>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.NormalTrx, Willowsoft.Checkbook.Lib.BudgetTrx, Willowsoft.Checkbook.Lib.TransferTrx</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The transaction objects between the specified dates.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Find-CheckbookNormalTrx</command:name>
      <command:verb>Find</command:verb>
      <command:noun>CheckbookNormalTrx</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Find the normal transactions that best match the specified transaction field values.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Searches the specified register for the normal transactions that best match the specified transaction date and payee/description, plus other optional matching criteria such as transaction amount and transaction number. Most of the match fields do not require an exact match. For example, the description/payee is case insensitive and only checks the first 10 characters.
      </maml:para>
      <maml:para>
        This is the same transaction search used by bank imports, to find manually entered or generated normal transactions representing the transactions imported from the bank. This algorithm is very complex, but generally yields intuitive results. See the documentation on bank imports for details on how this works.
      </maml:para>
      <maml:para>
        This search normally returns a small number of matches, or none at all. It is not a way to return large numbers of transactions, for example all transactions in a date range.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Find-CheckbookNormalTrx</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Register</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Register</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Number</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Date</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Description</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Amount</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MatchMin</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MatchMax</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DaysBefore</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>DaysAfter</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LooseMatch</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Register</maml:name>
        <maml:Description>
          <maml:para>
            The Register object to search, returned by the Get-CheckbookRegister cmdlet or otherwise obtained from the Company object.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Register</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Number</maml:name>
        <maml:Description>
          <maml:para>
            The transaction number to match.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Date</maml:name>
        <maml:Description>
          <maml:para>
            The transaction date to match.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">DateTime</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:Description>
          <maml:para>
            The transaction payee/description to match.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Amount</maml:name>
        <maml:Description>
          <maml:para>
            The transaction amount to match. If not specified then will match a zero amount.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MatchMin</maml:name>
        <maml:Description>
          <maml:para>
            The minimum amount to consider a match to the "Amount" parameter. In bank imports this amount comes from the memorized transaction used to fill in missing transaction information.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MatchMax</maml:name>
        <maml:Description>
          <maml:para>
            The maximum amount to consider a match to the "Amount" parameter. In bank imports this amount comes from the memorized transaction used to fill in missing transaction information.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DaysBefore</maml:name>
        <maml:Description>
          <maml:para>
            Only consider transactions dated from this number of days before the "Date" parameter to "DaysAfter" days after. All transactions in this date range are checked for satisfying enough of the other match conditions.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>DaysAfter</maml:name>
        <maml:Description>
          <maml:para>
            Only consider transactions dated from this number of days after the "Date" parameter to "DaysBefore" days before. All transactions in this date range are checked for satisfying enough of the other match conditions.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LooseMatch</maml:name>
        <maml:Description>
          <maml:para>
            If specified as true, find transactions matching as few as one field instead of requiring multiple matching fields. The caller may decide to use this when a regular match ("non-loose") does not find what you are looking for.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Boolean</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.NormalTrx</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            Returns all normal transactions meeting the match criteria. Returns only normal transactions, not other types such as budget transactions.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-CheckbookNormalTrx</command:name>
      <command:verb>Add</command:verb>
      <command:noun>CheckbookNormalTrx</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Create a new normal / bank transaction and add it to a register.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Create a new normal / bank transaction with the specified properties and split(s), and add it to a register. Acts exactly like adding a transaction in the regular user interface: It updates the running balance, applies splits to budgets, etc. If you use a balance sheet account as the category in a split, it will add the replica transaction for it to the register for that balance sheet account.
      </maml:para>
      <maml:para>
        Cannot be used to create other types of transactions, for example budget transactions. Can be used to create fake transactions, but not generated transactions.
      </maml:para>
      <maml:para>
        The split(s) to include in this transaction are created by the "New-CheckbookSplit" cmdlet. These splits must be passed using either the "OneSplit" or "Splits" parameter, but not both.
      </maml:para>
      <maml:para>
        The new transaction will not be saved to disk until Save-CheckbookCompany is called.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Add-CheckbookNormalTrx</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Register</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Register</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Date</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Date</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Number</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Description</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Memo</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Status</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">{Unreconciled|Reconciled}</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Fake</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AwaitingReview</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MatchNormalRange</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ImportKey</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OneSplit</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">SplitContent</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Splits</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">SplitContent[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Register</maml:name>
        <maml:Description>
          <maml:para>
            The Register object to add the transaction to. Obtained with the Get-CheckbookRegister cmdlet, or otherwise obtained from the Company object.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Register</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Date</maml:name>
        <maml:Description>
          <maml:para>
            The transaction date to use. Any time of day specified is ignored.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Date</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Number</maml:name>
        <maml:Description>
          <maml:para>
            The check number to use, or one of the valid strings allowed in this field such as "Card" or "Dep".
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:Description>
          <maml:para>
            The transaction payee name or description.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Memo</maml:name>
        <maml:Description>
          <maml:para>
            The transaction memo, if any. An empty string is equivalent to omitting this parameter.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Status</maml:name>
        <maml:Description>
          <maml:para>
            The transaction bank reconciliation status.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">{Unreconciled|Reconciled}</command:parameterValue>
        <dev:defaultValue>Unreconciled</dev:defaultValue>
        <dev:possibleValues>
          <dev:possibleValue>
            <dev:value>Unreconciled</dev:value>
            <maml:description>
              <maml:para>The transaction has not been reconciled to bank records.</maml:para>
            </maml:description>
          </dev:possibleValue>
          <dev:possibleValue>
            <dev:value>Reconciled</dev:value>
            <maml:description>
              <maml:para>The transaction has been reconciled to bank records.</maml:para>
            </maml:description>
          </dev:possibleValue>
        </dev:possibleValues>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Fake</maml:name>
        <maml:Description>
          <maml:para>
            If specified, this transaction has its "Fake" box checked.
          </maml:para>
        </maml:Description>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AwaitingReview</maml:name>
        <maml:Description>
          <maml:para>
            If specified, this transaction has its "Awaiting Review" box checked. This parameter is very seldom used.
          </maml:para>
        </maml:Description>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MatchNormalRange</maml:name>
        <maml:Description>
          <maml:para>
            The maximum difference between the amount of this transaction and the amount of any transaction it is matched with during bank imports. This parameter is very seldom used.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ImportKey</maml:name>
        <maml:Description>
          <maml:para>
            The import key, if any. Not used unless you are creating a transaction from information downloaded from the bank. Inspect real life transactions after importing them from the bank to determine what this value should be.
          </maml:para>
          <maml:para>
            If specified as non-blank, the transaction will be considered already imported from the bank. Future bank import operations will only treated it as a previously imported transaction.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OneSplit</maml:name>
        <maml:Description>
          <maml:para>
            A single split to add to the transaction. The object passed is created by the "New-CheckbookSplit" cmdlet. Either the "OneSplit" or "Splits" parameter must be specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">SplitContent</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Splits</maml:name>
        <maml:Description>
          <maml:para>
            An array of splits to add to the transaction. The objects passed are created by the "New-CheckbookSplit" cmdlet. Either the "OneSplit" or "Splits" parameter must be specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">SplitContent[]</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not create any output.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Update-CheckbookNormalTrx</command:name>
      <command:verb>Update</command:verb>
      <command:noun>CheckbookNormalTrx</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Update an existing normal / bank transaction.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Update an existing normal / bank transaction. Performs all the same secondary tasks as Add-CheckbookNormalTrx, like updating the register running balance.
      </maml:para>
      <maml:para>
        Only updates fields whose parameters are actually specified.
      </maml:para>
      <maml:para>
        The updated transaction will not be saved to disk until Save-CheckbookCompany is called.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Update-CheckbookNormalTrx</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NormalTrx</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">NormalTrx</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Date</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Date</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Number</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Description</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Memo</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Status</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">{Unreconciled|Reconciled}</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Fake</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AwaitingReview</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>MatchNormalRange</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ImportKey</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OneSplit</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">SplitContent</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Splits</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">SplitContent[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NormalTrx</maml:name>
        <maml:Description>
          <maml:para>
            The NormalTrx object to update. This object is obtained with Get-CheckbookTrx, Find-CheckbookNormalTrx, or otherwise obtained from a Register object.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.NormalTrx</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Date</maml:name>
        <maml:Description>
          <maml:para>
            The new transaction date to use. Any time of day specified is ignored. The transaction date will not be changed if this parameter is not specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Date</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Number</maml:name>
        <maml:Description>
          <maml:para>
            The new check number to use, or one of the valid strings allowed in this field such as "Card" or "Dep". The check number will not be changed if this parameter is not specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:Description>
          <maml:para>
            The new transaction payee name or description. The transaction description will not be changed if this parameter is not specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Memo</maml:name>
        <maml:Description>
          <maml:para>
            The new transaction memo. Specify an empty string to remove an existing memo. The memo will not be changed if this parameter is not specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Status</maml:name>
        <maml:Description>
          <maml:para>
            The new transaction bank reconciliation status. The status will not be changed if this parameter is not specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">{Unreconciled|Reconciled}</command:parameterValue>
        <dev:defaultValue>Unreconciled</dev:defaultValue>
        <dev:possibleValues>
          <dev:possibleValue>
            <dev:value>Unreconciled</dev:value>
            <maml:description>
              <maml:para>The transaction has not been reconciled to bank records.</maml:para>
            </maml:description>
          </dev:possibleValue>
          <dev:possibleValue>
            <dev:value>Reconciled</dev:value>
            <maml:description>
              <maml:para>The transaction has been reconciled to bank records.</maml:para>
            </maml:description>
          </dev:possibleValue>
        </dev:possibleValues>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Fake</maml:name>
        <maml:Description>
          <maml:para>
            If specified, the new state of the "Fake" checkbox.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Boolean</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AwaitingReview</maml:name>
        <maml:Description>
          <maml:para>
            If specified, the new state of the "Awaiting Review" checkbox. This parameter is very seldom used.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Boolean</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>MatchNormalRange</maml:name>
        <maml:Description>
          <maml:para>
            The new maximum difference between the amount of this transaction and the amount of any transaction it is matched with during bank imports. This parameter is very seldom used. This amount will not be changed if this parameter is not specified.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Decimal</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ImportKey</maml:name>
        <maml:Description>
          <maml:para>
            The new import key, if any. Not used unless you are creating a transaction from information downloaded from the bank. Inspect real life transactions after importing them from the bank to determine what this value should be.
          </maml:para>
          <maml:para>
            If specified as non-blank, the transaction will be considered already imported from the bank. Future bank import operations will only treated it as a previously imported transaction.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OneSplit</maml:name>
        <maml:Description>
          <maml:para>
            A single split to add to the transaction. The object passed is created by the "New-CheckbookSplit" cmdlet. Either the "OneSplit" or "Splits" parameter may be specified, but not both. If neither is specified, then all existing splits for the transaction are retained.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">SplitContent</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Splits</maml:name>
        <maml:Description>
          <maml:para>
            An array of splits to add to the transaction. The objects passed are created by the "New-CheckbookSplit" cmdlet. Either the "OneSplit" or "Splits" parameter may be specified, but not both. If neither is specified, then all existing splits for the transaction are retained.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">SplitContent[]</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not create any output.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-CheckbookTrx</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>CheckbookTrx</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Delete transactions from the checkbook.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Delete the specified transactions from the checkbook. Exactly the same operation as deleting a transaction in the regular user interface.
      </maml:para>
      <maml:para>
        The transactions to delete may be specified via the "Input" parameter, or pipeline input. Multiple transactions may be deleted in a single pipelined operation, for example by piping the output from one of the transaction search cmdlets directly into Remove-CheckbookTrx.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Remove-CheckbookTrx</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>Input</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Trx</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>Input</maml:name>
        <maml:Description>
          <maml:para>
            The transaction to delete. All types of transactions may be deleted, including normal / bank, budgets, etc.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Willowsoft.Checkbook.Lib.Trx</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.Trx</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The transactions to delete. The output from Find-CheckbookNormalTrx and Get-CheckbookTrx can be piped directly into this cmdlet.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not create any output.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-CheckbookSplit</command:name>
      <command:verb>New</command:verb>
      <command:noun>CheckbookSplit</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Create a split to use when creating or updating a normal / bank transaction.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Create a split to pass to the Add-CheckbookNormalTrx or Update-CheckbookNormalTrx cmdlets. A single split object of this type may be passed to the "OneSplit" parameter, or an array of them to the "Splits" parameter.
      </maml:para>
      <maml:para>
        The type of the returned object is different than the splits accessible as a property of an existing normal / bank transaction object. This is intentional, to prevent the caller from trying to pass a split from an existing transaction to Add-CheckbookNormalTrx or Update-CheckbookNormalTrx.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>New-CheckbookSplit</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Company</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Company</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Category</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InvoiceNum</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PONumber</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InvoiceDate</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Date</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InvoiceDate</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Date</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Budget</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Memo</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Terms</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Amount</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="true" variableLength="true">Decimal</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Company</maml:name>
        <maml:Description>
          <maml:para>
            The Company object to which the split will eventually belong, indirectly through its association with a transaction and a register.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Willowsoft.Checkbook.Lib.Company</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Category</maml:name>
        <maml:Description>
          <maml:para>
            The category name, like "E:Utilities" or "A:Checking".
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InvoiceNum</maml:name>
        <maml:Description>
          <maml:para>
            The invoice number, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PONumber</maml:name>
        <maml:Description>
          <maml:para>
            The purchase order number, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InvoiceDate</maml:name>
        <maml:Description>
          <maml:para>
            The invoice date, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Date</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InvoiceDate</maml:name>
        <maml:Description>
          <maml:para>
            The due date, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Date</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Budget</maml:name>
        <maml:Description>
          <maml:para>
            The budget name, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Memo</maml:name>
        <maml:Description>
          <maml:para>
            The split memo, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Terms</maml:name>
        <maml:Description>
          <maml:para>
            The payment terms, if any.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Amount</maml:name>
        <maml:Description>
          <maml:para>
            The split amount.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="true" variableLength="true">Decimal</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            This cmdlet does not accept any input.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.CheckBook.Powershell.SplitContent</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The new split object.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-CheckbookSimpleTrx</command:name>
      <command:verb>Get</command:verb>
      <command:noun>CheckbookSimpleTrx</command:noun>
      <!--This is the SYNOPSIS section of get-help output-->
      <maml:description>
        <maml:para>
          Create a simplified representation of a transaction, exposing only a few properties.
        </maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>
        Create a new object which is a simplified representation of a transaction, exposing only the date, check number, payee / description, category, and amount.
      </maml:para>
      <maml:para>
        This may be more convenient than using the full transaction object in some contexts, because of the complexity of the real transaction object and the fact that there are multiple transaction types with different properties.
      </maml:para>
      <maml:para>
        Returns a new object with copies of the data, not the original transaction object. Includes one additional property indicating the type of the original transaction. The "Category" property will be the value that appears for this transaction in the regular user interface, which is blank for a budget or other non-bank transaction.
      </maml:para>
    </maml:description>
    <command:syntax>
      <!--There can be multiple <command:syntaxItem> elements, for different usages of the cmdlet.-->
      <command:syntaxItem>
        <maml:name>Get-CheckbookSimpleTrx</maml:name>
        <!--These are the parameters that appear in this SYNTAX item.-->
        <!--These parameters can be a subset of what appears in the <command:parameters> element.-->
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
          <maml:name>Input</maml:name>
          <!--<maml:Description> element not needed in <command:syntaxItem> element-->
          <command:parameterValue required="false" variableLength="true">Trx</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!--These appear in the PARAMETERS section of get-help output.-->
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True" position="named" aliases="none">
        <maml:name>Input</maml:name>
        <maml:Description>
          <maml:para>
            The transaction to copy information from. All types of transactions may be passed, including normal / bank, budgets, etc.
          </maml:para>
          <maml:para>
            Input transactions may be passed with this parameter, or via pipelined input.
          </maml:para>
        </maml:Description>
        <command:parameterValue required="false" variableLength="true">Willowsoft.Checkbook.Lib.Trx</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.Trx</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The transactions to create simplified representations of.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Willowsoft.Checkbook.Lib.ShortTrx</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>
            The new simplified transaction objects.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
    </command:examples>
  </command:command>
</helpItems>